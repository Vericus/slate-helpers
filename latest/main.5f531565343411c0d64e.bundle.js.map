{"version":3,"file":"main.5f531565343411c0d64e.bundle.js","sources":["webpack:///../src/options/index.ts"],"sourcesContent":["import { Record } from \"immutable\";\n\nexport interface TypeOptions {\n  floatBlocks: string[];\n  textBlocks: string[];\n  alignments: string[];\n  dataField: string;\n  label: string;\n}\n\nexport const defaultOption: TypeOptions = {\n  floatBlocks: [],\n  textBlocks: [\n    \"paragraph\",\n    \"heading-one\",\n    \"heading-two\",\n    \"heading-three\",\n    \"heading-four\",\n    \"blockquote\"\n  ],\n  alignments: [\"left\", \"right\", \"center\", \"justify\"],\n  dataField: \"textAlign\",\n  label: \"align\"\n};\n\nclass Options extends Record(defaultOption) {\n  public floatBlocks: string[];\n\n  public textBlocks: string[];\n\n  public alignments: string[];\n\n  public dataField: string;\n\n  public label: string;\n\n  public static create(option: Partial<TypeOptions>): TypeOptions {\n    const options = {\n      ...defaultOption,\n      ...option,\n      floatBlocks: [\n        ...defaultOption.floatBlocks,\n        ...(option.floatBlocks ? option.floatBlocks : [])\n      ],\n      alignments: [\n        ...defaultOption.alignments,\n        ...(option.alignments ? option.alignments : [])\n      ],\n      textBlocks: [\n        ...defaultOption.textBlocks,\n        ...(option.textBlocks ? option.textBlocks : [])\n      ]\n    };\n    return new Options(options);\n  }\n}\n\nexport default Options;\n"],"mappings":"AAmBA","sourceRoot":""}